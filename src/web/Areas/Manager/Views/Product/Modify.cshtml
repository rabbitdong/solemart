@using Solemart.DataProvider.Entity;
@using Solemart.BusinessLib;
@model ProductItem

@{
    ViewBag.Title = "修改商品信息";
    Layout = "~/Areas/Manager/Views/Shared/_ManagerLayout.cshtml";
    IList<CategoryItem> Categories = CategoryManager.Instance.Categories;
    IList<ProductImageItem> Images = ProductManager.GetProductImage(Model.ProductID);
}

<h1>修改商品，如修改图片、商品规格、说明信息等:</h1>
<fieldset>
    <ol>
        <li>
            <label for="prod_id">商品ID:</label>
            <input name="prod_id" tabindex="1" id="prod_id" type="text" disabled="disabled" value="@Model.ProductID" />
        </li>
        <li>
            <label for="prod_name">商品名称:</label>
            <input name="prod_name" tabindex="1" id="prod_name" type="text" value="@Model.ProductName" />
        </li>
        <li>
            <label for="prodArea">产地:</label>
            <input name="prodArea" tabindex="1" id="prodArea" type="text" value="@Model.ProducingArea" />
        </li>
        <li>
            <label for="cate">所属类别:</label>
            <select id="cate_id" name="cate">
                @foreach (CategoryItem cate in Categories) {
                <optgroup label="@cate.CategoryName">
                    @if (cate.SubCategories != null) {
                    foreach (CategoryItem subcate in cate.SubCategories) {
                    <option value="@subcate.CategoryID" @((Model.CategoryID == subcate.CategoryID)?"selected":"")>@subcate.CategoryName</option>
                    }
                    }
                </optgroup>
                }
            </select>
        </li>
        <li>
            <label for="amount">商品数量:</label>
            <input name="amount" tabindex="2" id="amount" type="text" disabled="disabled" value="@Model.StockCount" />
        </li>
        <li>
            <label for="unit">商品计量单位:</label>
            <input name="unit" tabindex="2" id="unit" type="text" value="@Model.Unit" />
        </li>
        <li>
            <label for="prod_spec">商品规格描述:</label>
            <input name="prod_spec" tabindex="2" id="prod_spec" type="text" value="@Model.Specification" />
        </li>
        <li>
            <p for="prod_desc">商品说明:</p>
            <textarea name="productDesc" tabindex="2" id="productDesc">@Model.Description</textarea>
        </li>
        <li>
            <a class="comm_btn" onclick="javascript:commit_modify();" href="javascript:void(0);">提交修改</a>
        </li>
        <li class="newline">
            <label for="files">商品图片编辑:</label>                
            <a href="javascript:void(0);" onclick="uploadimg()" id="upload">上传图片</a>                
            <p class="fNote" id="status">新的图片可以上传。目前的列出的图片可以删除</p>
            <ul id="files"></ul>
            <div id="img_list">
                @if (Images != null)
                {
                    foreach (ProductImageItem img in Images)
                    {
                    <div class="editable">
                        <img class="mainpic" src="/Images/product/normal/@img.ImageUrl" alt="@img.ImageID" />
                        <div class="flow_tool" data-iid="@img.ImageID" data-pid="@Model.ProductID"><span>删除</span><span @(img.ForLogo ? "class=tooldisable" : "")>首页LOGO</span></div>
                    </div>
                    }
                }
            </div>
        </li>
    </ol>
</fieldset>
<script type="text/javascript">
    function htmlEncode(value) {
        //create a in-memory div, set it's inner text(which jQuery automatically encodes)
        //then grab the encoded contents back out.  The div never exists on the page.
        return $('<div/>').text(value).html();
    }

    function htmlDecode(value) {
        return $('<div/>').html(value).text();
    }

    $(function () {
        var description = new TINY.editor.edit('description', {
            id: 'productDesc',
            width: 520,
            height: 210,
            cssclass: 'tinyeditor',
            controlclass: 'tinyeditor-control',
            rowclass: 'tinyeditor-header',
            dividerclass: 'tinyeditor-divider',
            controls: ['bold', 'italic', 'underline', 'strikethrough', '|', 'subscript', 'superscript', '|',
                'orderedlist', 'unorderedlist', '|', 'outdent', 'indent', '|', 'leftalign',
                'centeralign', 'rightalign', 'blockjustify', '|', 'unformat', '|', 'undo', 'redo', 'n',
                'font', 'size', 'style', '|', 'image', 'link', 'unlink'],
            footer: true,
            fonts: ['Verdana', 'Arial', 'Georgia', 'Trebuchet MS'],
            xhtml: true,
            cssfile: 'custom.css',
            bodyid: 'editor',
            footerclass: 'tinyeditor-footer',
            toggle: { text: 'source', activetext: 'wysiwyg', cssclass: 'toggle' },
            resize: { cssclass: 'resize' }
        });

        $("div.flow_tool").bind("click", "span", function (e) {
            e.preventDefault();
            var pid = $(this).data("pid");
            var iid = $(this).data("iid");

            if (e.target.innerText == "删除") {
                if (!confirm("确定删除该图片？"))
                    return false;

                $.post("/Manager/Product/DeleteProductImage",
                    {"pid": pid, "iid": iid},
                    function (result) {
                        var ret = new WebReturn(result);
                        if (ret.success)
                            window.location.reload();
                        else
                            alert(ret.message);
                    });
            }
            else {
                if ($(e.target).hasClass("tooldisable"))
                    return false;

                $.post("/Manager/Product/SetImageLogo",
                    {"pid": pid, "iid":iid}, 
                    function (result) {
                        ret = new WebReturn(result);
                        if (ret.success)
                            window.location.reload();
                        else
                            alert(ret.message);
                    });
            }
        });

        var btnUpload = $('#upload');
        var status = $('#status');
        new AjaxUpload(btnUpload, {
            action: '/Manager/Product/AddNewProductImage/@Model.ProductID',
            name: 'uploadfile',
            onSubmit: function (file, ext) {
                if (!(ext && /^(jpg|png|jpeg|gif)$/.test(ext))) {
                    // extension is not allowed
                    status.text('Only JPG, PNG or GIF files are allowed');
                    return false;
                }
                status.text('Uploading...');
            },
            onComplete: function (file, response) {
                //On completion clear the status
                status.text('');
                //Add uploaded file to list
                if (response == "success") {
                    //$('<li></li>').appendTo('#files').html('<img src="/uploads/' + file + '" alt="" /><br />' + file).addClass('success');
                    window.location.reload();
                } else {
                    $('<li></li>').appendTo('#files').text(response).addClass('error');
                }

            }
        });
    });

    function commit_modify() {
        description.post();
        $.post("/Manager/Product/CommitModify",
            {
                ProductID: $("#prod_id").val(),
                ProductName: $("#prod_name").val(),
                ProducingArea: $("#prodArea").val(),
                CategoryID: $("#cate_id").val(),
                Unit: $("#unit").val(),
                Specification: $("#prod_spec").val(),
                Description: htmlEncode(description.t.value)
            },
            function (result) {
                alert(result)
            });
    }
</script>